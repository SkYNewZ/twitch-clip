version: '3'

vars:
  TEMP:
    sh: mktemp -d

tasks:
  default:
    - task: lint
    - task: tests
    - task: build

  build:
    cmds:
      - go mod tidy
      - go build ./...

  lint:
    cmds:
      - golangci-lint run ./...

  tests:
    cmds:
      - go test -v ./...

  mod:
    cmds:
      - go mod download

  generate:
    cmds:
      - go generate ./...
    sources:
      - assets/winres.json
      - assets/icon22.png
      - assets/icon.ico
    generates:
      - rsrc_windows_amd64.syso
      - internal/icon/icon_unix.go
      - internal/icon/icon_windows.go
    vars:
      VERSION:
        sh: git describe --tags --exact-match 2>/dev/null || git describe --tags 2>/dev/null || echo "v0.0.0-$(git rev-parse --short HEAD)"

  build:darwin:
    deps: [ mod, generate ]
    cmds:
      - go build -ldflags="-s -w -X 'main.twitchClientID=${TWITCH_CLIENT_ID}' -X 'main.twitchClientSecret=${TWITCH_SECRET_ID}'" -tags production -o "{{.TEMP}}/twitch_clip_${GOOS}_${GOARCH}" .
      - echo "Binary built at {{.TEMP}}/twitch_clip_${GOOS}_${GOARCH}"
    env:
      GOOS: darwin
      GOARCH: amd64
      CGO_ENABLED: "1"

  package:darwin:
    deps: [ build:darwin ]
    cmds:
      - go run hack/macapp.go -assets "{{.TEMP}}" -bin "twitch_clip_${GOOS}_${GOARCH}" -icon ./assets/icon1080.png -identifier com.skynewz.twitchclip -name "Twitch Clip" -o ./out/
    env:
      GOOS: darwin
      GOARCH: amd64

  build:windows:
    deps: [ mod, generate ]
    cmds:
      - go build -ldflags="-s -w -X 'main.twitchClientID=${TWITCH_CLIENT_ID}' -X 'main.twitchClientSecret=${TWITCH_SECRET_ID}' -H=windowsgui" -tags production -o "out/twitch_clip_${GOOS}_${GOARCH}.exe" .
      - echo "Binary built at out/twitch_clip_${GOOS}_${GOARCH}.exe"
    env:
      GOOS: windows
      GOARCH: amd64
      CGO_ENABLED: "1"
      CC: x86_64-w64-mingw32-gcc
      CXX: x86_64-w64-mingw32-g++

  build:linux:
    deps: [ mod, generate ]
    cmds:
      - go build -ldflags="-s -w -X 'main.twitchClientID=${TWITCH_CLIENT_ID}' -X 'main.twitchClientSecret=${TWITCH_SECRET_ID}'" -tags production -o "out/twitch_clip_${GOOS}_${GOARCH}.exe" .
      - echo "Binary built at out/twitch_clip_${GOOS}_${GOARCH}.exe"
    env:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: "1"
      CC: gcc
