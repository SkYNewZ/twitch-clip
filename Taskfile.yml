version: '3'

vars:
  TEMP:
    sh: mktemp -d
  VERSION:
    sh: git describe --tags --exact-match 2>/dev/null || git describe --tags 2>/dev/null || echo "v0.0.0-$(git rev-parse --short HEAD)"

tasks:
  default:
    - task: clean
    - task: lint
    - task: tests
    - task: build

  clean:
    desc: Clean output folder
    cmds:
      - rm -rf out/*

  build:
    desc: Build binary
    cmds:
      - go mod tidy
      - go build ./...

  lint:
    desc: Lint
    cmds:
      - golangci-lint run ./...

  tests:
    desc: Go tests
    cmds:
      - go test -v ./...

  generate:
    desc: Generate assets
    cmds:
      - go generate ./...
    sources:
      - assets/winres.json
      - assets/icon22.png
      - assets/icon.ico
    generates:
      - rsrc_windows_amd64.syso
      - internal/icon/icon_unix.go
      - internal/icon/icon_windows.go

  build:darwin:
    desc: Build for darwin/amd64
    deps: [ generate ]
    cmds:
      - go build -a -ldflags="-s -w -X 'main.twitchClientID=${TWITCH_CLIENT_ID}' -X 'main.twitchClientSecret=${TWITCH_SECRET_ID}'" -tags production -o "{{.TEMP}}/twitch_clip_${GOOS}_${GOARCH}" .
    env:
      GOOS: darwin
      GOARCH: amd64
      CGO_ENABLED: "1"

  package:darwin:
    desc: Package binary as macOS app
    deps: [ build:darwin ]
    cmds:
      - go run hack/macapp.go -assets "{{.TEMP}}" -bin "twitch_clip_${GOOS}_${GOARCH}" -icon ./assets/icon1080.png -identifier com.skynewz.twitchclip -name "Twitch Clip" -o ./out/
      - zip -r ./out/twitch_clip_${GOOS}_${GOARCH}_{{ .VERSION }}.zip "./out/Twitch Clip.app" README.md LICENSE && rm -r "./out/Twitch Clip.app"
    env:
      GOOS: darwin
      GOARCH: amd64

  build:windows:
    desc: Build windows/amd64
    deps: [ generate ]
    cmds:
      - go build -a -ldflags="-s -w -X 'main.twitchClientID=${TWITCH_CLIENT_ID}' -X 'main.twitchClientSecret=${TWITCH_SECRET_ID}' -H=windowsgui" -tags production -o "out/twitch_clip_${GOOS}_${GOARCH}_{{ .VERSION }}.exe" .
    env:
      GOOS: windows
      GOARCH: amd64
      CGO_ENABLED: "1"
      CC: x86_64-w64-mingw32-gcc
      CXX: x86_64-w64-mingw32-g++

  build:linux:
    desc: Build linux/amd64
    deps: [ generate ]
    cmds:
      - go build -a -ldflags="-s -w -X 'main.twitchClientID=${TWITCH_CLIENT_ID}' -X 'main.twitchClientSecret=${TWITCH_SECRET_ID}'" -tags production -o "out/twitch_clip_${GOOS}_${GOARCH}_{{ .VERSION }}.exe" .
    env:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: "1"
      CC: gcc

  changelog:
    desc: Update CHANGELOG.md
    cmds:
      - git-chglog > CHANGELOG.md

